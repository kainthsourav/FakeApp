name: Build and Publish

on:
  push:
    branches:
      - feature/**
      - develop
      - release/**
      - hotfix/*
  workflow_dispatch:

jobs:
  clean-project:
    name: Clean Project
    runs-on: windows-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
        
      - name: Clean Project
        run: dotnet clean FakeApp.sln

  restore-dependencies:
    name: Restore Dependencies
    needs: clean-project
    runs-on: windows-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0

      - name: Restore Dependencies
        run: dotnet restore FakeApp.sln

  # generate-version:
  #   name: Generate Version
  #   needs: restore-dependencies
  #   runs-on: ubuntu-latest
    
  #   steps:
  #     - name: Generate Version
  #       id: generate_version
  #       run: echo "::set-output name=new_version::$(date +'%Y.%m.%d-%H%M%S')"

  build-solution:
    name: Build Solution
    needs: generate-version
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0

      - name: Build Solution
        run: |
          dotnet build FakeApp.sln --configuration Release

  publish-artifact:
    name: Publish Artifact
    needs: build-solution
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
        
      - name: Publish Artifact
        run: |
          dotnet publish FakeApp.sln -c Release -o ./publish

      - name: Archive Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: FakeApp-Artifact
          path: ./publish

  show-artifact:
    name: Show Artifact
    needs: publish-artifact
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.1.7
        with:
          name: FakeApp-Artifact
          path: ./downloaded-artifact

      - name: List Files
        run: ls ./downloaded-artifact

      - name: Provide Artifact Link
        run: |
          echo "Artifact download link: ${{ steps.download-artifact.outputs.artifact_url }}"

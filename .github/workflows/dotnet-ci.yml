name: Build, Publish, and Deploy

on:
  push:
    branches:
      - feature/**
      - develop
      - release/**
      - hotfix/*
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (e.g., development, staging, production)'
        required: false

jobs:
  clean-project:
    name: Clean Project
    runs-on: windows-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
        
      - name: Clean Project
        run: dotnet clean FakeApp.sln

  restore-dependencies:
    name: Restore Dependencies
    needs: clean-project
    runs-on: windows-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0

      - name: Restore Dependencies
        run: dotnet restore FakeApp.sln

  build-solution:
    name: Build Solution
    needs: restore-dependencies
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0

      - name: Build Solution
        run: |
          dotnet build FakeApp.sln --configuration Release

  publish-artifact:
    name: Publish Artifact
    needs: build-solution
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.5
        with:
          fetch-depth: 0
        
      - name: Publish Artifact
        run: |
          dotnet publish FakeApp.sln -c Release -o ./publish

      - name: Archive Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: FakeApp-Artifact
          path: ./publish

  deploy-to-ec2:
    name: Deploy to EC2
    needs: publish-artifact
    runs-on: windows-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: FakeApp-Artifact
          path: ./fakeapp-artifact

      - name: Copy Artifact to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: ./fakeapp-artifact
          target: C:\inetpub\wwwroot\FakeApp  # Change this to your application folder under Default Web Site

      - name: Remote Execution
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            # Restart IIS to apply changes
            iisreset /restart
